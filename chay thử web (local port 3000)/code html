<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>T·ª´ ƒêi·ªÉn Trie Tree</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
        }
        input {
            padding: 8px;
            margin: 5px;
            width: 300px;
            font-size: 16px;
        }
        button {
            padding: 8px 12px;
            cursor: pointer;
            font-size: 16px;
        }
        #suggestionsList {
            list-style-type: none;
            padding: 0;
            margin: 5px auto;
            width: 320px;
            border: 1px solid #ddd;
            display: none; /* ·∫®n m·∫∑c ƒë·ªãnh */
            position: absolute;
            background: white;
            z-index: 10;
        }
        #suggestionsList li {
            padding: 10px;
            cursor: pointer;
            text-align: left;
        }
        #suggestionsList li:hover {
            background-color: #f0f0f0;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>

    <h2>Web T·ª´ ƒêi·ªÉn (Trie Tree) üöÄ</h2>

    <div style="position: relative; display: inline-block;">
        <input type="text" id="searchInput" placeholder="Nh·∫≠p t·ª´ c·∫ßn t√¨m..." oninput="getSuggestions()" autocomplete="off">
        <button onclick="searchWord()">T√¨m ki·∫øm</button>
        <ul id="suggestionsList"></ul>
    </div>

    <div id="result"></div>

    <script>
        // H√†m t√¨m ki·∫øm t·ª´ trong database
        async function searchWord() {
            let word = document.getElementById("searchInput").value.trim();
            if (!word) {
                alert("Vui l√≤ng nh·∫≠p t·ª´ c·∫ßn t√¨m!");
                return;
            }

            let response = await fetch(`/search?word=${word}`);
            let data = await response.json();

            let resultDiv = document.getElementById("result");
            if (!data.exists) {
                resultDiv.innerHTML = `<p style="color:red;">‚ùå ${data.message}</p>`;
            } else {
                resultDiv.innerHTML = `
                    <h3>K·∫øt qu·∫£ t√¨m ki·∫øm:</h3>
                    <p><b>T·ª´:</b> ${data.data.word}</p>
                    <p><b>Lo·∫°i t·ª´:</b> ${data.data.types.join(", ")}</p>
                    <p><b>ƒê·ªãnh nghƒ©a:</b> ${data.data.meanings.join("; ")}</p>
                    <p><b>V√≠ d·ª•:</b> ${data.data.examples.join("; ")}</p>
                `;
            }
        }

        // H√†m l·∫•y danh s√°ch g·ª£i √Ω t·ª´ Trie Tree
        async function getSuggestions() {
            const prefix = document.getElementById("searchInput").value.trim();
            const suggestionsList = document.getElementById("suggestionsList");

            if (prefix.length === 0) {
                suggestionsList.style.display = "none";
                return;
            }

            const response = await fetch(`/autocomplete?prefix=${prefix}`);
            const data = await response.json();

            if (data.suggestions.length === 0) {
                suggestionsList.style.display = "none";
                return;
            }

            let listHTML = "";
            data.suggestions.forEach(word => {
                listHTML += `<li onclick="selectWord('${word}')">${word}</li>`;
            });

            suggestionsList.innerHTML = listHTML;
            suggestionsList.style.display = "block";
        }

        // Khi ch·ªçn m·ªôt t·ª´ g·ª£i √Ω
        function selectWord(word) {
            document.getElementById("searchInput").value = word;
            document.getElementById("suggestionsList").style.display = "none"; // ·∫®n danh s√°ch g·ª£i √Ω
        }

        // ·∫®n danh s√°ch n·∫øu click ra ngo√†i
        document.addEventListener("click", function(event) {
            if (!event.target.matches("#searchInput") && !event.target.matches("#suggestionsList li")) {
                document.getElementById("suggestionsList").style.display = "none";
            }
        });
    </script>

</body>
</html>


